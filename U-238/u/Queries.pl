/* SWI-Prolog query log.  This file contains all syntactically
   correct queries issued in this directory.  It is used by the
   test wizard to generate unit tests.
*/

:(objects_i,list_inheritance(0,157,L)).
:(objects_i,list_inheritance(0,T,L)).
:(objects_i,list_inheritance(A,T,L)).
:(objects_i,list_inheritance(A,157,L)).
:(objects_i,list_inheritance(0,157,L)).
:(objects_i,list_inheritance(0,157,A,L)).
make.
:(objects_i,same_or_descendant(1,1)).
','(gtrace,:(objects_i,same_or_descendant(1,1))).
class_path(man_v,X,true,P).
class_path(X,citizen_v,true,P).
integer(_G3290).
make.
make.
class_path(0,157,X,P).
class_path(0,154,X,P).
class_path(0,11,X,P).
class_path(-(_G3731,0),-(callup_v,A),X,P).
class_path(0,98,X,P).
must_be(nonneg,4).
must_be(nonneg,_G3732).
must_be(nonneg,a).
make.
make.
make.
class_path(man_v,callup_v,true,PA).
','(gtrace,class_path(man_v,callup_v,true,PA)).
make.
class_path(0,11,_G689,P).
class_path(0,-(man_v,11),_G692,P).
make.
:(class_diagram,class_path_unify_arg(4,X,M)).
:(class_diagram,class_path_unify_arg(a,X,M)).
:(class_diagram,class_path_unify_arg(-(a,3),X,M)).
make.
:(class_diagram,class_path_unify_arg(a,X,M)).
class_path(0,-(man_v,11),_G1019,P).
class_path(0,X,_G1016,P).
make.
make.
make.
class_path(0,X,_G689,P).
','(gtrace,class_path(0,X,_G689,P)).
make.
class_path(0,X,_G689,P).
class_path(X,Y,_G689,P).
class_path(-(X,0),Y,_G692,P).
class_path(man_v,Y,_G689,P).
class_path(-(man_v,9),Y,_G692,P).
class_path(-(man_v,0),Y,_G692,P).
class_path(-(man_v,11),Y,_G692,P).
class_path(man_v,11,_G689,P).
:(objects_i,list_inheritance(11,X)).
class_path(kookoo_v,X,_G1400,P).
class_path(object_base_v,citizen_v,true,P).
make.
','(obj_construct(citizen_v,[sex,birthday],[man,1994],C0),','(obj_rebase(->(object_v,db_object_v),C0,C1),','(arg(1,C1,From_Class_Id),','(:(objects_i,list_inheritance_names(From_Class_Id,L1)),','(class_path(citizen_v,callup_v,true,[_G353|Path0]),!))))).
make.
','(gtrace,class_path(man_v,callup_v,true,PAs)).
nodebug.
class_path(man_v,callup_v,true,PAs).
class_path(object_base_v,object_v,true,PAs).
','(gtrace,class_path(object_base_v,object_v,true,PAs)).
','(gtrace,class_path(object_base_v,object_v,true,PAs)).
nodebug.
class_path(object_v,object_v,true,PAs).
class_path(-(object_v,1),-(object_v,1),true,PAs).
','(gtrace,class_path(-(object_v,1),-(object_v,1),true,PAs)).
make.
class_path(man_v,callup_v,true,PAs).
class_path(man_v,callup_v,true,A,PAs).
class_path(-(man_v,_G1804),-(callup_v,_G1807),true,A,PAs).
','(obj_construct(citizen_v,[sex,birthday],[man,1994],C0),','(obj_rebase(->(object_v,db_object_v),C0,C1),','(arg(1,C1,From_Class_Id),','(:(objects_i,list_inheritance_names(From_Class_Id,L1)),','(class_path(citizen_v,callup_v,true,[_G1933|Path0]),!))))).
','(obj_construct(citizen_v,[sex,birthday],[man,1994],C0),','(obj_rebase(->(object_v,db_object_v),C0,C1),','(arg(1,C1,From_Class_Id),class_path(-(_G2040,From_Class_Id),-(callup_v,_G2044),true,[],P)))).
','(obj_construct(citizen_v,[sex,birthday],[man,1994],C0),','(obj_rebase(->(object_v,db_object_v),C0,C1),class_path(-(citizen_v,_G2037),-(callup_v,_G2040),true,[],P))).
','(obj_construct(citizen_v,[sex,birthday],[man,1994],C0),','(obj_rebase(->(object_v,db_object_v),C0,C1),','(class_path(-(citizen_v,_G2037),-(callup_v,_G2040),true,[],P),!))).
','(obj_construct(citizen_v,[sex,birthday],[man,1994],C0),','(obj_rebase(->(object_v,db_object_v),C0,C1),','(arg(1,C1,From_Class_Id),','(class_path(0,From_Class_Id,_G2042,P1),','(class_path(-(citizen_v,_G2046),-(callup_v,_G2049),true,[],P),!))))).
','(obj_construct(citizen_v,[sex,birthday],[man,1994],C0),','(obj_rebase(->(object_v,db_object_v),C0,C1),','(arg(1,C1,From_Class_Id),','(class_path(0,From_Class_Id,_G2640,P1),','(class_path(-(citizen_v,_G2644),-(callup_v,_G2647),true,[],P),!))))).
','(obj_construct(citizen_v,[sex,birthday],[man,1994],C0),','(obj_rebase(->(object_v,db_object_v),C0,C1),','(arg(1,C1,From_Class_Id),','(class_path(0,-(_G2638,From_Class_Id),_G2643,P1),','(class_path(-(citizen_v,_G2647),-(callup_v,_G2650),true,[],P),!))))).
','(obj_construct(citizen_v,[sex,birthday],[man,1994],C0),','(obj_rebase(->(object_v,db_object_v),C0,C1),','(arg(1,C1,From_Class_Id),','(class_path(0,-(_G2638,From_Class_Id),_G2643,P1),','(class_path(-(citizen_v,_G2647),-(callup_v,_G2650),true,P1,P),!))))).
','(obj_construct(citizen_v,[sex,birthday],[man,1994],C0),','(obj_rebase(->(object_v,db_object_v),C0,C1),','(arg(1,C1,From_Class_Id),','(class_path(-(citizen_v,_G2639),-(callup_v,_G2642),true,P1),','(class_path(-(_G2649,0),-(_G2652,From_Class_Id),_G2657,P1,P),!))))).
','(obj_construct(citizen_v,[sex,birthday],[man,1994],C0),','(obj_rebase(->(object_v,db_object_v),C0,C1),','(arg(1,C1,From_Class_Id),','(class_path(-(citizen_v,_G2639),-(callup_v,_G2642),true,[_G2644|P1]),','(class_path(-(_G2652,0),-(_G2655,From_Class_Id),_G2660,P1,P),!))))).
','(obj_construct(citizen_v,[sex,birthday],[man,1994],C0),','(obj_rebase(->(object_v,db_object_v),C0,C1),','(arg(1,C1,From_Class_Id),','(class_path(-(citizen_v,_G2639),-(callup_v,_G2642),true,[-(citizen_v,_G2645)|P1]),','(class_path(-(_G2655,0),-(_G2658,From_Class_Id),_G2663,P1,P),!))))).
','(obj_construct(citizen_v,[sex,birthday],[man,1994],C0),','(obj_rebase(->(object_v,db_object_v),C0,C1),','(arg(1,C1,From_Class_Id),','(class_path(-(citizen_v,_G2639),-(callup_v,_G2642),true,[-(citizen_v,_G2645)|P1]),','(class_path(-(_G2655,0),-(_G2658,From_Class_Id),_G2663,P1,P),','(!,:(class_diagram,class_path_extract_list(name,name,P,PP)))))))).
make.
','(obj_construct(citizen_v,[sex,birthday],[man,1994],C0),','(obj_rebase(->(object_v,db_object_v),C0,C1),','(arg(1,C1,From_Class_Id),','(class_path(-(citizen_v,_G348),-(callup_v,_G351),true,[-(citizen_v,_G354)|P1]),','(class_path(-(_G364,0),-(_G367,From_Class_Id),_G372,P1,P2),','(!,class_path_extract_list(name,P2,P))))))).
','(obj_construct(citizen_v,[sex,birthday],[man,1994],C0),','(obj_rebase(->(object_v,db_object_v),C0,C1),','(arg(1,C1,From_Class_Id),','(class_path(-(citizen_v,_G348),-(callup_v,_G351),true,[-(citizen_v,_G354)|P1]),','(class_path(-(_G364,0),-(_G367,From_Class_Id),_G372,P1,P2),','(!,','(class_path_extract_list(name,P2,P),:(class_create,class_rebase_int(P,Ids,R,_G383))))))))).
','(obj_construct(citizen_v,[sex,birthday],[man,1994],C0),','(obj_rebase(->(object_v,db_object_v),C0,C1),','(arg(1,C1,From_Class_Id),','(class_path(-(citizen_v,_G1350),-(callup_v,_G1353),true,[-(citizen_v,_G1356)|P1]),','(class_path(-(_G1366,0),-(_G1369,From_Class_Id),_G1374,P1,P2),','(!,class_path_extract_list(name,P2,P))))))).
','(obj_construct(citizen_v,[sex,birthday],[man,1994],C0),','(obj_rebase(->(object_v,db_object_v),C0,C1),','(arg(1,C1,From_Class_Id),','(class_path(-(citizen_v,_G1350),-(callup_v,_G1353),true,[-(citizen_v,_G1356)|P1]),','(class_path(-(_G1366,0),-(_G1369,From_Class_Id),_G1374,P1,P2),','(!,','(class_path_extract_list(name,P2,P3),','(reverse(P3,P),:(class_create,class_rebase_int(P,Ids,R,_G1388)))))))))).
','(obj_construct(citizen_v,[sex,birthday],[man,1994],C0),','(obj_rebase(->(object_v,db_object_v),C0,C1),','(arg(1,C1,From_Class_Id),','(class_path(-(citizen_v,_G2413),-(callup_v,_G2416),true,[-(citizen_v,_G2419)|P1]),','(class_path(-(_G2429,0),-(_G2432,From_Class_Id),_G2437,P1,P2),','(!,','(class_path_extract_list(name,P2,P3),','(reverse(P3,P),:(class_create,class_rebase_int(P,Ids,R,_G2451)))))))))).
make.
','(obj_construct(citizen_v,[sex,birthday],[man,1994],C0),','(obj_rebase(->(object_v,db_object_v),C0,C1),obj_downcast(C1,callup_v,C2))).
','(obj_construct(citizen_v,[sex,birthday],[man,1994],C0),','(obj_rebase(->(object_v,db_object_v),C0,C1),','(gtrace,obj_downcast(C1,callup_v,C2)))).
help.
load_test_files(v).
run_tests.
[u(class_diagram)].
class_path(1,11,_G166,_G167).
;(->(class_path(1,11,_G4,_G5),true),fail).
;(->(class_path(11,11,_G4,_G5),true),fail).
;(->(class_path(13,11,_G4,_G5),true),fail).
class_path(X,11,_G166,_G167).
','(gtrace,class_path(X,11,_G5,_G6)).
','(gtrace,class_path(X,11,_G3238,_G3239)).
notrace.
nodebug.
make.
make.
','(gtrace,class_path(X,11,_G689,_G690)).
make.
','(gtrace,class_path(X,11,_G321,_G322)).
class_path(X,11,_G166,_G167).
class_path(13,11,_G166,_G167).
class_path(11,Y,_G166,_G167).
class_path(X,Y,_G166,_G167).
make.
make.
load_test_files(objects_i).
run_tests.
:(objects_i,same_or_descendant(1,1)).
:(objects_i,same_or_descendant(1,1)).
:(objects,parent_(0,1)).
:(objects,parent_(1,0)).
:(objects,parent_(1,X)).
:(objects_i,class_path(-(_G2078,1),X,_G2083,_G2084)).
:(objects_i,class_path(X,-(_G2918,1),_G2923,_G2924)).
:(objects_i,class_path(X,-(_G2918,0),_G2923,_G2924)).
:(objects_i,class_path(-(_G2918,0),-(_G2921,0),_G2926,_G2927)).
','(gtrace,:(objects_i,class_path(-(_G4,0),-(_G5,0),_G6,_G7))).
make.
[u(objects_i)].
[u(/(internal,objects_i))].
class_path(A,B,C,D).
class_path(A,11,C,D).
class_path(11,11,C,D).
load_test_files(objects_i).
run_tests.
','(class_primary_id(man_v,Man_Id),findall(Desc,','(same_or_descendant(Desc_Id,Man_Id),class_id(Desc_Id,Desc)),Descendants)).
same_or_descendant(X,11).
','(gtrace,same_or_descendant(X,11)).
make.
load_test_files(class_diagram).
run_tests.
same_or_descendant(Man_Id,Anc_Id).
','(obj_construct(callup_v,[],[],Obj1),','(obj_rebase(->(object_v,db_object_v),Obj1,Obj2),','(obj_rebase(->(object_v,tarjan_vertex_v),Obj2,Obj3),','(arg(1,Obj1,Id1),','(arg(1,Obj3,Id3),','(same_or_descendant(Id1,true,man_v),','(same_or_descendant(Id1,true,callup_v),','(\+(same_or_descendant(Id1,true,db_object_v)),','(findall(Class,same_or_descendant(Id1,true,Class),L1U),msort(L1U,L1)))))))))).
same_or_descendant(13,true,X).
same_or_descendant(13,true,man_v).
same_or_descendant(11,true,man_v).
same_or_descendant(0,true,man_v).
same_or_descendant(13,true,man_v).
same_or_descendant(13,true,X).
','(gtrace,same_or_descendant(13,true,X)).
make.
load_test_files(v).
run_tests.
make.
make.
run_tests.
make.
reload_all_classes.
true.
:(vd,db_clear(people)).
[u(vd)].
:(db_i,db_functor_des(people,A,B,C)).
:(plunit_db_i,model_db(_G24236)).
:(db_i,db_functor_des(people,A,B,C)).
make.
run_tests.
run_tests(db_i).
:(plunit_db_i,model_db(_G2551)).
:(db_i,db_functor_des(people,A,B,C)).
reload_all_classes.
:(plunit_db_i,model_db(_G164)).
:(db_i,db_functor_des(people,A,B,C)).
reload_all_classes.
db_clear(people).
:(db_i,db_functor_des(people,A,B,C)).
db_construct(people,man_v,[name,surname],['Sergei','Lodyagin'],Slod1).
:(db_i,db_functor_des(people,A,B,C)).
db_clear(people).
','(gtrace,db_construct(people,man_v,[name,surname],['Sergei','Lodyagin'],Slod1)).
make.
run_tests.
